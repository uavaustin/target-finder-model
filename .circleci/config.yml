defaults: &defaults
  docker:
    - image: circleci/python:3.6

version: 2
jobs:
  # Testing job which builds a small model and runs sanity tests
  # against it.
  test:
    <<: *defaults
    steps:
      - checkout
      - run: pip install --user tox
      - run: python -m tox
      - persist_to_workspace:
          root: generate
          paths:
            - assets
      - run: tar -cvzf test-shapes.tar.gz test/shapes
      - store_artifacts:
          path: test-shapes.tar.gz
          destination: test-shapes.tar.gz

  # Parallel jobs to build each type of shape.
  full-gen: &image-job
    <<: *defaults
    environment:
      - NUM_IMAGES: 10
    steps:
      - checkout
      - attach_workspace:
          at: generate
      - run: pip install --user -r requirements-dev.txt
      - run: python generate/create_full_images.py
      - persist_to_workspace:
          root: generate
          paths:
            - data/*

  # Job that creates a tar archive for the python library.
  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: target_finder_model
      - run: ./scripts/create-release.sh
      - store_artifacts:
          path: release
          destination: release
      - persist_to_workspace:
          root: '.'
          paths:
            - release

  # Job that publishes to GitHub Releases for tags.
  publish:
    docker:
      - image: cibuilds/github:0.12
    steps:
      - attach_workspace:
          at: '.'
      - run: |
          ghr \
            -t ${GITHUB_TOKEN} \
            -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME} \
            -c ${CIRCLE_SHA1} \
            -delete \
            ${CIRCLE_TAG} \
            ./release/

workflows:
  version: 2
  test-generate-train:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - full-gen:
          <<: *gen-job
      - release:
          requires:
            - train
          filters:
            <<: *release-filters
      - publish:
          requires:
            - release
          filters:
            <<: *release-filters
